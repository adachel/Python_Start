# Задача 10: 
# На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной. 
# Выведите минимальное количество монет, которые нужно перевернуть.

from random import randint
def Func(arr):
    print(arr)
    count_0 = 0; count_1 = 0
    for i in arr:
        if i == 0: count_0 += 1
        else: count_1 += 1
    if count_0 < count_1: res = count_0
    else: res = count_1
    return res

# n = int(input('Введите кол-во монет: '))
# arr = [randint(0, 1) for i in range(n)]
# print('Минимальное число монеток, которые нужно перевернуть: ' + str(Func(arr)))

# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике. 
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки. 
# Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.

from math import sqrt
def Calc(S, P):
    # x + y = S, x * y = P; x = S - y, x = P / y => (y^2 - S * y + P = 0; D = S^2 - 4 * 1 * P)
    D = S ** 2 - 4 * P # Дискриминант 
    if D < 0: res = 'При таких данных нет решений'
    elif D == 0: 
        if (S / 2) == int(S / 2):
            y = int(S / 2) 
            x = S - y
            res = f'Первое число: {x}, второе число: {y}'
        else: res = 'При таких данных нет целочисленных решений'
    elif D > 0:
        if ((S + sqrt(D)) / 2) == int((S + sqrt(D)) / 2):
            y1 = int((S + sqrt(D)) / 2); x1 = S - y1
            y2 = int((S - sqrt(D)) / 2); x2 = S - y2
            res = f'Первый вариант: {x1} и {y1}, Второй вариант: {x2} и {y2}'
        else: res = 'При таких данных нет целочисленных решений'
    return res

def Calc2(S, P):
    res = ''
    for j in range(1, P):
        if (S - j) == (P / j):
            y = str(j); x = str(S - j)
            res = res + ' ' + 'Результат: ' + x + ' ' + y
    if not res: result = 'При таких данных нет целочисленных решений'   
    else: result = res 
    return result

# S = int(input('Введите сумму чисел: ')) 
# P = int(input('Введите произведение чисел: '))
# print(Calc(S, P))
# print(Calc2(S, P))

# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

def Round_Count(n):
    res = ''
    for i in range(1, n):
        if 2 ** i <= n:
            res = res + ' ' + str(i)
    return res

# N = int(input('Введите число: '))
# print('Результат: ' + Round_Count(N))

