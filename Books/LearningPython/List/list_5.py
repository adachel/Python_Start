# print(3 in [1, 2, 3]) # Членство

# for x in [1, 2, 3] : print(x, end=', ') # Итерация

# res = [с * 4 for с in 'SPAM'] # Списковые включения
# print(res)

# res = []
# for с in 'SPAM' :
#     res.append(с * 4)
# print(res)

# # 'mар' применяет функцию к элементам в последовательности и собирает все результаты в новый список:
# a = list(map(abs, [-1, -2, 0, 1, 2])); print(a)

# # Присваивания по индексам и срезам
# L = ['spam', 'Spam', 'SPAM!']
# L[1] = 'eggs' # Присваивание по индексу
# print(L)
# L[0:2] = ['eat', 'more'] # Присваивание по срезу: удаление вставка
# print(L)

# L = [1]
# L[: 0] = [2, 3, 4] # Вставить все на место :0, пустой срез в начале
# print(L)
# L[len(L) :] = [5, 6, 7] # Вставить все на место len(L) :, пустой срез в конце
# print(L)
# L.extend([8, 9, 10]) # Вставить все в конце, именованный метод
# print(L)

# L =  ['abc', 'ABD', 'аВе']
# L.sort () # Сортировка со смешанным регистром символов
# L. sort (key = str. lower) # Приведение к нижнему регистру
# L.sort(key = str.lower, reverse = True) # Изменение порядка сортировки
# a = sorted(L, key = str.lower, reverse = True) # Встроенная функция сортировки
# b = sorted([x.lower() for x in L] , reverse = True) # Предварительно трансформирует элементы:
# print(a, b)

# L = [1, 2, 3, 4]
# L.reverse()
# a = list(reversed(L))
# print(L, a)

# L = ['spam', 'eggs', 'ham']
# a = L.index ('eggs') # Индекс объекта (поиск)
# L.insert(1, 'toast') # Вставка в позицию
# L. remove ('eggs') # Удаление по значению
# L.pop(1) # Удаление по позиции
# b = L.count ('spam') # Количество вхождений
# print(a, L, b)
# методы 'count' и 'index' не изменяют сам список, а возвращают информацию о его содержимом.

# L = ['spam', 'eggs', 'ham', 'toast']
# del L[0] # Удаление одного элемента
# del L[1:] # Удаление целой секции
# print(L)

L = ['Already', 'got', 'one']
L[1: ] = []
print(L)



